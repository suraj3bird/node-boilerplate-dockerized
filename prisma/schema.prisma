// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}



datasource db {
  provider = "mysql"
  url      = env("MYSQL_URI")
}

model User {
  id    Int     @id @default(autoincrement())
  email String  @unique
  firstName  String
  lastName String
  username String?
  phone String
  uuId String @unique
  avatar String?
  role Role @default(student)
  status UserStatus @default(unverified)
  occupation String?
  token Token?
  address Address[]
  education Education[]
  dob String?
  guardian Guardian?
  blogs Blogs[]
  isDeleted Boolean @default(false)
  validity String?
  createdAt DateTime @updatedAt
  updatedAt DateTime @updatedAt
}

model Guardian {
  id Int @id @default(autoincrement())
  user User @relation(fields: [userId], references: [id])
  userId Int @unique
  fullName String
  relation String
  phone String
  email String?
}

model Token {
  id Int @id @default(autoincrement())
  user User @relation(fields: [userId], references: [id])
  userId Int @unique
  token String
  type String
  key String
  count Int
  createdAt DateTime @updatedAt
  updatedAt DateTime @updatedAt
}

model Address {
  id Int @id @default(autoincrement())
  user User @relation(fields: [userId], references: [id])
  userId Int
  country String
  state String
  city String
  district String
  street String
  addressType AddressType @default(permanent)
  createdAt DateTime @updatedAt
  updatedAt DateTime @updatedAt
}

model Education {
  id Int @id @default(autoincrement())
  user User @relation(fields: [userId], references: [id])
  userId Int
  university String
  degree String
  startDate String
  endDate String?
  createdAt DateTime @updatedAt
  updatedAt DateTime @updatedAt
}

model Ebooks {
  id Int @id @default(autoincrement())
  name String
  price String
  image String
  slug String
  description String @db.LongText
  createdAt DateTime @updatedAt
  updatedAt DateTime @updatedAt
}

model Blogs {
  id Int @id @default(autoincrement())
  title String
  excerpt String @db.LongText
  image String
  category String
  description String @db.LongText
  slug String
  user User @relation(fields: [userId], references: [id])
  userId Int
  createdAt DateTime @updatedAt
  updatedAt DateTime @updatedAt
}

model Destinations {
  id Int @id @default(autoincrement())
  title String
  image String
  description String @db.Text
  slug String
  enquiry Enquiry[]
  createdAt DateTime @updatedAt
  updatedAt DateTime @updatedAt
}

model Enquiry {
  id Int @id @default(autoincrement())
  enquiryId String @unique
  fullName String
  email String
  phone String
  destination Destinations? @relation(fields: [destinationId], references: [id])
  destinationId Int?
  studyLevel String?
  subject String
  intake String?
  message String?
  createdAt DateTime @updatedAt
  updatedAt DateTime @updatedAt
}

model BlogCarousel {
  id Int @id @default(autoincrement())
  image String
}
// enum 
enum Role {
  admin
  student
  teacher
}

enum AddressType {
  permanent
  temporary
  both
}

enum UserStatus {
  verified
  unverified
}